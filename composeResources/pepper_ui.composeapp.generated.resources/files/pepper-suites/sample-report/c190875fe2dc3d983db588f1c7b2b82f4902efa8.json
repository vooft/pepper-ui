{
  "id": "c190875fe2dc3d983db588f1c7b2b82f4902efa8",
  "version": 1,
  "className": "io.github.vooft.pepper.sample.SimplePepperSpec",
  "name": "my test scenario",
  "steps": [
    {
      "id": "324ec75838cd7dc147e874f36f532e588072e9e3",
      "name": "1. Given: generate random string",
      "arguments": [
        {
          "name": "prefix",
          "type": "kotlin.String",
          "value": "first"
        }
      ],
      "result": "first 1912749563",
      "error": null,
      "startedAt": "2024-11-11T18:07:20.443280Z",
      "finishedAt": "2024-11-11T18:07:20.446293Z"
    },
    {
      "id": "48ad122cdaf45989c312474b335628fbd08e20d2",
      "name": "2. And: generate random string",
      "arguments": [
        {
          "name": "prefix",
          "type": "kotlin.String",
          "value": "second"
        }
      ],
      "result": "second 412085991",
      "error": null,
      "startedAt": "2024-11-11T18:07:20.446550Z",
      "finishedAt": "2024-11-11T18:07:20.449555Z"
    },
    {
      "id": "ed4583b1a915d8d7e14db54ab9e7e3a6c3822559",
      "name": "3. When: two strings are compared",
      "arguments": [
        {
          "name": "first",
          "type": "kotlin.String",
          "value": "first 1912749563"
        },
        {
          "name": "second",
          "type": "kotlin.String",
          "value": "second 412085991"
        }
      ],
      "result": "CompareResult(first=first 1912749563, second=second 412085991, result=false)",
      "error": null,
      "startedAt": "2024-11-11T18:07:20.449805Z",
      "finishedAt": "2024-11-11T18:07:20.451627Z"
    },
    {
      "id": "93822df29df393db21d2e0fb5ec6ec1203ad2808",
      "name": "4. Then: deep nested compare result is 'false'",
      "arguments": [
        {
          "name": "compareResult",
          "type": "io.github.vooft.pepper.sample.Holder",
          "value": "Holder(value=Holder(value=CompareResult(first=first 1912749563, second=second 412085991, result=false)))"
        },
        {
          "name": "expected",
          "type": "kotlin.Boolean",
          "value": "false"
        }
      ],
      "result": "kotlin.Unit",
      "error": null,
      "startedAt": "2024-11-11T18:07:20.452006Z",
      "finishedAt": "2024-11-11T18:07:20.453837Z"
    }
  ],
  "status": "PASSED",
  "startedAt": "2024-11-11T18:07:20.443092Z",
  "finishedAt": "2024-11-11T18:07:20.453990Z"
}
